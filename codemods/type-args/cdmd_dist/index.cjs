var p=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var A=Object.prototype.hasOwnProperty;var C=(t,r)=>{for(var l in r)p(t,l,{get:r[l],enumerable:!0})},D=(t,r,l,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of b(r))!A.call(t,n)&&n!==l&&p(t,n,{get:()=>r[n],enumerable:!(e=E(r,n))||e.enumerable});return t};var R=t=>D(p({},"__esModule",{value:!0}),t);var k={};C(k,{handleSourceFile:()=>P});module.exports=R(k);var i=require("ts-morph");function m(t,r,l){let e=t.getImportDeclaration(r);if(!e)return null;let n=e.getNamedImports().find(a=>a.getName()===l);return n?n.getAliasNode()?.getText()||n.getName():null}function T(t,r,l,e){let n=t.getImportDeclaration(r)||t.addImportDeclaration({moduleSpecifier:r});return n.getNamedImports().some(a=>a.getName()===l)?n:n.addNamedImport({name:l,isTypeOnly:e})}function y(t,r){let l=m(t,"msw","http"),e=m(t,"msw","graphql"),n=r.getChildrenOfKind(i.SyntaxKind.PropertyAccessExpression).at(0)?.getChildrenOfKind(i.SyntaxKind.Identifier)??[],a=n.at(0);if(!a)return!1;let s=(n.at(1)??a).getText(),c=a.getText()===l&&["all","get","post","put","patch","delete","head","options"].includes(s),o=a.getText()===e&&["query","mutation"].includes(s);return c||o}function N(t){let r=t.getArguments().at(1)??null;if(r===null)return null;let l=r.getChildrenOfKind(i.SyntaxKind.Parameter),e=r.asKind(i.SyntaxKind.ArrowFunction)??r.asKind(i.SyntaxKind.FunctionExpression)??null;return e===null?null:[r.getChildrenOfKind(i.SyntaxKind.Block).at(0)??e,l,e]}function K(t){return t!=null}function h(t,r){let l=0;Object.entries(r).sort(([e],[n])=>+e-+n).forEach(([e,n])=>{t.insertText(+e+l,n),l+=n.length}),Object.getOwnPropertyNames(r).forEach(e=>{delete r[Number(e)]})}function B(t){return t.getImportDeclarations().find(r=>r.getModuleSpecifier().getLiteralText().startsWith("msw"))!==void 0}function P(t){if(!B(t))return;let r={};t.getDescendantsOfKind(i.SyntaxKind.TypeReference).filter(e=>e.getText().startsWith("MockedRequest")).forEach(e=>{let[n]=e.getTypeArguments();n!==void 0&&e.replaceWithText(n.getText())});let l=!1;return t.getDescendantsOfKind(i.SyntaxKind.TypeReference).filter(e=>e.getText().startsWith("ResponseResolver")).forEach(e=>{let[n,a]=e.getTypeArguments();n!==void 0&&(n.getText()==="RestRequest"&&(n.replaceWithText("DefaultBodyType"),T(t,"msw","DefaultBodyType")),a?a.replaceWithText(n.getText()):e.insertTypeArgument(1,n.getText()),n.replaceWithText("HttpRequestResolverExtras<PathParams>"),l=!0)}),l&&(T(t,"msw/lib/core/handlers/HttpHandler","HttpRequestResolverExtras",!0),T(t,"msw","PathParams",!0)),t.getDescendantsOfKind(i.SyntaxKind.TypeReference).filter(e=>e.getText().startsWith("HttpHandler")).forEach(e=>{if(e.getText()!=="HttpHandler"){let[n,a,d]=e.getTypeArguments();if(n===void 0)return;let s=e.getFirstAncestorByKind(i.SyntaxKind.VariableDeclaration)??e.getFirstAncestorByKind(i.SyntaxKind.FunctionExpression)??null;if(s===null)return;let c="HttpHandler";s.getDescendantsOfKind(i.SyntaxKind.CallExpression).filter(o=>y(t,o)).forEach(o=>{let u=o.getTypeArguments(),f=[a?.getText()||"any",n.getText(),d?.getText()||void 0].filter(K);if(u.length)o.insertTypeArguments(0,f),u.forEach(g=>o.removeTypeArgument(g));else{let g=o.getFirstChildByKind(i.SyntaxKind.OpenParenToken)??null;if(g===null)return;let x=g.getEnd()-(1+(e.getText().length-c.length));r[x]=`<${f.join(", ")}>`}}),e.replaceWithText(c)}}),h(t,r),t.getDescendantsOfKind(i.SyntaxKind.CallExpression).filter(e=>y(t,e)).forEach(e=>{let n=N(e);if(n===null)return;let[a]=n,d=a.getDescendantsOfKind(i.SyntaxKind.AsExpression).filter(s=>s.getDescendantsOfKind(i.SyntaxKind.Identifier).find(c=>c.getText()==="body"));d.length&&d.forEach(s=>{let c=s.getFirstChild()?.getText()??null,o=s.getChildrenOfKind(i.SyntaxKind.TypeReference).at(0)?.getText()??null;if(c===null||o===null)return;s.replaceWithText(c);let u=e.getTypeArguments().at(1)??null;if(u!==null)u.replaceWithText(o);else{let f=e.getFirstChild()?.getEnd()??null;if(f===null)return;r[f]=`<any, ${o}>`}})}),h(t,r),t.fixUnusedIdentifiers(),t.getFullText()}0&&(module.exports={handleSourceFile});
